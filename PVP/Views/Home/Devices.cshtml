@{
    ViewData["Title"] = "Devices";
}
@model IEnumerable<PVP.Models.Device>

<div class="center-container-wider">
    <h1 class="center-text-title">Jūsų įrenginiai</h1>

    <p class="container-text">Šioje puslapio dalyje galite valdyti pridėtus įrenginius: keisti pavadinimą, nustatyti tarifą bei limitą, ištrinti įrenginio sukauptus duomenis arba pašalinti pasirinktą įrenginį.<br /> Pašalinus įrenginį iš sistemos yra ištrinama <u>visa</u> jo sukaupta informacija, jis gali būti perleistas kitam naudotojui.</p>
    @if (Model.Count() != 0)
    {
        <table class="table table-hover" id="table-devices">
            <colgroup>
                <col span="1" style="width: 5%;">
                <col span="1" style="width: 40%;">
                <col span="1" style="width: 20%;">
                <col span="1" style="width: 18%;">
                <col span="1" style="width: 10%;">
                <col span="1" style="width: 7%; float: right;">
            </colgroup>
            <tbody>
                <tr style="font-size: 18px;">
                    <th></th>
                    <th>Pavadinimas</th>
                    <th>Tarifas</th>
                    <th>Dienos limitas</th>
                    <th style="text-align: center;">Būsena</th>
                    <th>Parinktys</th>
                </tr>
                @foreach (var item in Model)
                {
                <tr class="table-main" style="font-size: 17px;">
                <td class="devices-icon"><span class="glyphicon glyphicon-modal-window"></span></td>

                @if (item.Tag == null || item.Tag == "")
                {
                    <td style="color: darkgray">Įrenginys @item.SetupString</td>
                }
                else
                {
                    <td>@Html.DisplayFor(modelItem => item.Tag)</td>
                }

                @if (item.Tariff == 0)
                {
                    <td>&nbsp;Nenustatytas</td>
                }
                else
                {
                    <td>&nbsp;@Math.Round(item.Tariff, 4) Eur/kWh</td>
                }
                @if (item.Treshold == 0)
                {
                    <td>&nbsp;Nėra</td>
                }
                else
                {
                    if (item.IsRealtime)
                    {
                        <td>&nbsp;@Math.Round(item.Treshold, 2) kWh <b style="color: red;">(Viršytas)</b></td>
                    }
                    else
                    {
                        <td>&nbsp;@Math.Round(item.Treshold, 2) kWh</td>
                    }

                }
                <td style=" text-align: center;" class="devices-icon">
                    @if (item.IsOn == true)
                    {
                        <a style=" text-align: center; color: #5BBA47; cursor:pointer;" onclick="changeStatus(@item.Id, 'išjungti')"><span class="glyphicon glyphicon-off"></span></a>
                    }
                    else if (item.IsOn == false)
                    {
                        <a style="text-align: center; color: #AA3030; cursor: pointer;" onclick="changeStatus(@item.Id, 'įjungti')"><span class="glyphicon glyphicon-off"></span></a>
                    }

                </td>
                <td>
                    <div class="dropdown" style="float:right;">
                        <span title="Parinktys" class="glyphicon glyphicon-option-vertical" style="font-size: 20px;"></span>
                        <div class="dropdown-content">
                            <a onclick="editTag(@item.Id, '@item.Tag')"><span title="Keisti pavadinimą" class="glyphicon glyphicon-pencil"></span>&nbsp;&nbsp;Keisti pavadinimą</a>
                            <a onclick="editTariff(@item.Id, '@item.Tariff')"><span title="Keisti tarifą" class="glyphicon glyphicon-pencil"></span>&nbsp;&nbsp;Keisti tarifą</a>
                            <a onclick="editTreshold(@item.Id, '@item.Treshold')"><span title="Keisti limitą" class="glyphicon glyphicon-pencil"></span>&nbsp;&nbsp;Keisti limitą</a>
                            <a onclick="clearStatistics(@item.Id)"><span title="Ištrinti statistiką" class="glyphicon glyphicon-trash"></span>&nbsp;&nbsp;Ištrinti statistiką</a>
                            <a onclick="removeDevice(@item.Id)"><span title="Pašalinti įrenginį" class="glyphicon glyphicon-remove"></span>&nbsp;&nbsp;Pašalinti</a>
                        </div>
                    </div>
                </td>
            </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="error-text">Neturite pridėtų įrenginių. Pridėti įrenginį galite šio puslapio apačioje.</p>
    }

</div>
<div class="center-container">
    <h1 class="center-text-title">Naujo įrenginio pridėjimas</h1>
    <p class="container-text">
        Šioje puslapio dalyje galite pridėti naują įrenginį.<br>
        Įveskite turimo įrenginio unikalų atpažinimo kodą (10 simbolių ilgio kodas esantis ant prietaiso).
    </p>

    <div class="device-form">
        <div class="wrap-input100 m-b-60">
            <input class="input100" type="text" id="setupInput" placeholder="Įrenginio atpažinimo kodas">
            <span class="focus-input100"></span>
        </div>
        <div class="wrap-input100 m-b-15" style="margin-bottom: 25px; margin-top: 25px;">
            <input class="input100" type="text" id="tagInput" placeholder="Įrenginio pavadinimas (nebūtina)">
            <span class="focus-input100"></span>
        </div>
        <div class="container-login100-form-btn m-t-20" onclick="newDevice()">
            <button class="login100-form-btn">
                Pridėti
            </button>
        </div>
    </div>
    <br />
    <h1 class="center-text-title" style="margin-top:80px; margin-bottom:30px;">Neturite įrenginio?</h1>
    <div class="container-login100-form-btn">
        <a class="login100-form-btn" href="https://bongo.cat/">
            <span class="glyphicon glyphicon-shopping-cart" style="top:0px;"></span>&nbsp;&nbsp;Pirkti įrenginį
        </a>
    </div>
</div>


<script type="text/javascript">

    function editTag(device_id, currentTag) {
        Swal.fire({
            icon: 'question',
            title: 'Įveskite naują įrenginio pavadinimą:',
            input: 'text',
            inputValue: currentTag,
            inputPlaceholder: "Įveskite naują pavadinimą arba palikite tuščią",
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Išsaugoti',
            cancelButtonText: 'Atšaukti',
            showLoaderOnConfirm: true,
            preConfirm: (tg) => {
                if (tg.length > 50)
                {
                    Swal.showValidationMessage(`Įrenginio pavadinimas negali būti ilgesnis nei 50 simbolių!`)
                }
                else {
                    var tagjson = JSON.stringify({ id: device_id, value: tg });
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdateTag", "Home")",
                        contentType: "application/json; charset=utf-8",
                        data: tagjson,
                        success: function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Pakeitimai išsaugoti!',
                                confirmButtonText: 'Gerai',
                            }).then((result) => {
                                location.reload();
                            })
                        },
                        error: function () {
                            Swal.fire('Vidinė klaida.')
                        }
                    });
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        })
    }

    function newDevice() {
        var setupInput = document.getElementById('setupInput').value
        var tagInput = document.getElementById('tagInput').value
        if (tagInput.length > 50) {
            Swal.fire({
                icon: 'error',
                title: 'Įrenginio pavadinimas negali būti ilgesnis nei 50 simbolių!',
                confirmButtonText: 'Gerai',
            })
            return;
        }


        var tagjson = JSON.stringify({ setupString: setupInput, tag: tagInput });

        $.ajax({
            type: "POST",
            url: "@Url.Action("NewDevice", "Home")",
            contentType: "application/json; charset=utf-8",
            data: tagjson,
            success: function () {
                Swal.fire({
                    icon: 'success',
                    title: 'Įrenginys pridėtas!',
                    showConfirmButton: true,
                    confirmButtonText: 'Gerai',
                }).then((result) => {
                    location.reload();
                })
            },
            error: function (response) {
                Swal.fire({
                    icon: 'warning',
                    title: response.responseText,
                    text: 'Įsitikinkite, jog teisingai įvedėte atpažinimo kodą.',
                    showConfirmButton: true,
                    confirmButtonText: 'Gerai'
                })
            }
        });

    }

    function editTreshold(device_id, currentTreshold) {
        Swal.fire({
            icon: 'question',
            title: 'Įveskite naują limitą:',
            text: 'Jei norite panaikinti limitą, įveskite 0 arba palikite lauką tuščią.',
            input: 'text',
            inputValue: currentTreshold,
            inputPlaceholder: "Įveskite limitą",
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Išsaugoti',
            cancelButtonText: 'Atšaukti',
            showLoaderOnConfirm: true,
            preConfirm: (tr) => {
                if (tr.length > 10)
                {
                    Swal.showValidationMessage(`Įrenginio limitas negali būti ilgesnis nei 10 simbolių!`)
                }
                else if (isNaN(tr) || tr < 0) {
                    Swal.showValidationMessage(`Veskite tik sveikus teigiamus skaičius!`)
                }
                else {
                    if (!tr) {
                        tr = '0';
                    }
                    var tagjson = JSON.stringify({ id: device_id, value: tr });
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdateTreshold", "Home")",
                        contentType: "application/json; charset=utf-8",
                        data: tagjson,
                        success: function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Pakeitimai išsaugoti!',
                                confirmButtonText: 'Gerai',
                            }).then((result) => {
                                location.reload();
                            })
                        },
                        error: function () {
                            Swal.fire('Vidinė klaida.')
                        }
                    });
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        })
    }


    function editTariff(device_id, currentTreshold) {
        Swal.fire({
            icon: 'question',
            title: 'Įveskite naują tarifą:',
            text: 'Jei norite panaikinti tarifą, įveskite 0 arba palikite lauką tuščią.',
            input: 'text',
            inputValue: currentTreshold,
            inputPlaceholder: "Įveskite tarifą",
            inputAttributes: {
                autocapitalize: 'off'
            },
            showCancelButton: true,
            confirmButtonText: 'Išsaugoti',
            cancelButtonText: 'Atšaukti',
            showLoaderOnConfirm: true,
            preConfirm: (tr) => {
                if (tr.length > 10)
                {
                    Swal.showValidationMessage(`Įrenginio tarifas negali būti ilgesnis nei 10 simbolių!`)
                }
                else if (isNaN(tr) || tr < 0) {
                    Swal.showValidationMessage(`Veskite tik teigiamus skaičius!`)
                }
                else {
                    if (!tr) {
                        tr = '0';
                    }
                    var tagjson = JSON.stringify({ id: device_id, value: tr });
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("UpdateTariff", "Home")",
                        contentType: "application/json; charset=utf-8",
                        data: tagjson,
                        success: function () {
                            Swal.fire({
                                icon: 'success',
                                title: 'Pakeitimai išsaugoti!',
                                confirmButtonText: 'Gerai',
                            }).then((result) => {
                                location.reload();
                            })
                        },
                        error: function () {
                            Swal.fire('Vidinė klaida.')
                        }
                    });
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        })
    }



    function clearStatistics(device_id) {
        Swal.fire({
            icon: 'warning',
            title: 'Ar tikrai norite ištrinti visus šio įrenginio įrašus?',
            text: 'Ištrintų įrenginio elektros sunaudojimo įrašų atkurti nebus galima.',
            showCancelButton: true,
            confirmButtonText: 'Ištrinti',
            cancelButtonText: 'Atšaukti',
            showLoaderOnConfirm: true,
            preConfirm: (tr) => {
                var tagjson = JSON.stringify({ id: device_id, value: '' });
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ClearStatistics", "Home")",
                    contentType: "application/json; charset=utf-8",
                    data: tagjson,
                    success: function () {
                        Swal.fire({
                            icon: 'success',
                            title: 'Įrašai ištrinti.',
                            confirmButtonText: 'Gerai',
                        }).then((result) => {
                            location.reload();
                        })
                    },
                    error: function () {
                        Swal.fire('Klaida.')
                    }
                });

            },
            allowOutsideClick: () => !Swal.isLoading()
        })
    }

    function removeDevice(device_id) {
        Swal.fire({
            icon: 'warning',
            title: 'Ar tikrai norite pašalinti įrenginį ir visus jo sukauptus duomenis?',
            text: 'Jei įrenginį pametėte, jis nepataisomai sugedo, ar norite jį atiduoti kitam naudotojui, galite jį pašalinti.',
            showCancelButton: true,
            confirmButtonText: 'Pašalinti',
            cancelButtonText: 'Atšaukti',
            showLoaderOnConfirm: true,
            preConfirm: (tr) => {
                var tagjson = JSON.stringify({ id: device_id, value: '' });
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("RemoveDevice", "Home")",
                    contentType: "application/json; charset=utf-8",
                    data: tagjson,
                    success: function () {
                        Swal.fire({
                            icon: 'success',
                            title: 'Įrenginys pašalintas.',
                            confirmButtonText: 'Gerai',
                        }).then((result) => {
                            location.reload();
                        })
                    },
                    error: function () {
                        Swal.fire('Klaida.')
                    }
                });

            },
            allowOutsideClick: () => !Swal.isLoading()
        })
    }

    function changeStatus(device_id, action) {
        Swal.fire({
            icon: 'warning',
            title: 'Ar tikrai norite '+ action +' įrenginį?',
            showCancelButton: true,
            confirmButtonText: 'Taip',
            cancelButtonText: 'Ne',
            showLoaderOnConfirm: true,
            preConfirm: (tr) => {
                var tagjson = JSON.stringify({ id: device_id, value: '' });
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ChangeStatus", "Home")",
                    contentType: "application/json; charset=utf-8",
                    data: tagjson,
                    success: function () {
                        Swal.fire({
                            icon: 'success',
                            title: 'Operacija sėkminga',
                            confirmButtonText: 'Gerai',
                        }).then((result) => {
                            location.reload();
                        })
                    },
                    error: function () {
                        Swal.fire('Klaida.')
                    }
                });

            },
            allowOutsideClick: () => !Swal.isLoading()
        })
    }
</script>
